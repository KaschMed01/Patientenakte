/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kaschmed;

import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Francesca Kaschnig
 */
public class Benutzeroberflaeche extends javax.swing.JDialog {
    
    BildAnzeige anzeige = new BildAnzeige();
    

    java.awt.Frame parent;

    /**
     * Creates new form Benutzeroberflaeche
     */
    public Benutzeroberflaeche(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initComponents();
        showUser();
    }

    Benutzeroberflaeche() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    public ArrayList<Patient> userList(){
     ArrayList<Patient> patientList = new ArrayList<>();
//     Connection con = null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
          String url = ("jdbc:mysql://localhost:3306/patientenliste?"
                    + "user=root&password=root");
             Connection con = DriverManager.getConnection(url);
             String query1 = "SELECT * pFROM patientenliste";
             Statement st = con.createStatement();
             ResultSet rs = st.executeQuery(query1);
             Patient pat;
             while(rs.next()){
                 pat = new Patient(rs.getString("vornamen"),rs.getString("nachname"),rs.getInt("idPatient"),rs.getInt("Telefonnummer"),rs.getInt("SVN"),rs.getString("Geschlecht"));
                 patientList.add(pat);
             }
        } catch (SQLException ex) {
            Logger.getLogger(Benutzeroberflaeche.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Benutzeroberflaeche.class.getName()).log(Level.SEVERE, null, ex);
        }
        return patientList;
    }
    public void showUser(){
        ArrayList<Patient> list = userList();
DefaultTableModel model = (DefaultTableModel)workBench.getModel();
Object[] row = new Object [6];
for(int i = 0; i< list.size();i++){
    row[0]= list.get(i).getiD();
    row [1] = list.get(i).getVorname();
    row [2] = list.get(i).getNachname();
    row [3] = list.get(i).getsVN();
    row [4] = list.get(i).getGeschlecht();
    row [5] = list.get(i).getTelefonNr();
    model.addRow(row);
}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        workBench = new javax.swing.JTable();
        edit = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        newPat = new javax.swing.JButton();
        save = new javax.swing.JButton();
        connect = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        options = new javax.swing.JMenu();
        saveAs = new javax.swing.JMenuItem();
        print = new javax.swing.JMenuItem();
        openPic = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();
        instructions = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenu();
        exitOption = new javax.swing.JMenuItem();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setName(""); // NOI18N

        workBench.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Vorame", "Nachname", "SVN", "Telefonnummer", "Geschlecht"
            }
        ));
        jScrollPane1.setViewportView(workBench);

        edit.setText("Edit...");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        delete.setText("Delete...");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        newPat.setText("New...");
        newPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPatActionPerformed(evt);
            }
        });

        save.setText("Save");

        connect.setText("Connect...");
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });

        options.setText("Options");

        saveAs.setText("Save as...");
        options.add(saveAs);

        print.setText("Print...");
        options.add(print);

        openPic.setText("Open Picture...");
        openPic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openPicActionPerformed(evt);
            }
        });
        options.add(openPic);

        jMenuBar1.add(options);

        help.setText("Help");

        about.setText("About...");
        help.add(about);

        instructions.setText("Instructions...");
        help.add(instructions);

        jMenuBar1.add(help);

        exit.setText("Exit");

        exitOption.setText("exit...");
        exitOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitOptionActionPerformed(evt);
            }
        });
        exit.add(exitOption);

        jMenuBar1.add(exit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(edit)
                        .addGap(29, 29, 29)
                        .addComponent(delete)
                        .addGap(31, 31, 31)
                        .addComponent(newPat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(connect))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(save)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit)
                    .addComponent(delete)
                    .addComponent(newPat)
                    .addComponent(connect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(save)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editActionPerformed

    private void exitOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitOptionActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitOptionActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        Delete delete = new Delete(parent, true);
        delete.setLocationRelativeTo(parent);
        delete.setVisible(true);

    }//GEN-LAST:event_deleteActionPerformed

    private void newPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPatActionPerformed
        // TODO add your handling code here:
        newPatient pat = new newPatient(parent, true);
        pat.setLocationRelativeTo(parent);
        pat.setVisible(true);
    }//GEN-LAST:event_newPatActionPerformed

    private void connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectActionPerformed
        // TODO add your handling code here:
       Connection con = null;
        try {
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/patientenliste?"
                    + "user=root&password=root");
            JOptionPane.showMessageDialog(null,"Verbindung erfolgreich hergestellt!");

        } catch (SQLException ex) {
            Logger.getLogger(Benutzeroberflaeche.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Verbindung fehlgeschlagen!");
        }
        Statement meinStmt = null;
        try {
            meinStmt = con.createStatement();

        } catch (SQLException ex) {
            Logger.getLogger(Benutzeroberflaeche.class.getName()).log(Level.SEVERE, null, ex);
        }try{
            String query = "select * from patientenliste";
            ResultSet myrs = meinStmt.executeQuery("select * from patientenliste");
            while(myrs.next()){
                
               String bez = (myrs.getString("idPatienten")+", "+ myrs.getString("Vornamen")+", "+myrs.getString("Nachnamen")+", "+myrs.getString("Vorname")+", "+myrs.getString("SVN")+ ", "+myrs.getString("Geschlecht"));
            }
            
        }catch(SQLException ex){
            Logger.getLogger(Benutzeroberflaeche.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_connectActionPerformed

    private void openPicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openPicActionPerformed
       InputStreamReader  reader = new InputStreamReader(System.in);
        try {
            int letters = reader.read();
         
       while(reader.ready()){
           letters = reader.read();
           
           reader.close();
       
       }
        }catch (IOException ex) {
            Logger.getLogger(Benutzeroberflaeche.class.getName()).log(Level.SEVERE, null, ex);
               }
    }//GEN-LAST:event_openPicActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Benutzeroberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Benutzeroberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Benutzeroberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Benutzeroberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Benutzeroberflaeche dialog = new Benutzeroberflaeche(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JButton connect;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JMenu exit;
    private javax.swing.JMenuItem exitOption;
    private javax.swing.JMenu help;
    private javax.swing.JMenuItem instructions;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newPat;
    private javax.swing.JMenuItem openPic;
    private javax.swing.JMenu options;
    private javax.swing.JMenuItem print;
    private javax.swing.JButton save;
    private javax.swing.JMenuItem saveAs;
    private javax.swing.JTable workBench;
    // End of variables declaration//GEN-END:variables
}
